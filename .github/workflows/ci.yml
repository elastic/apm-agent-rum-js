---

name: ci

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - '**.asciidoc'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - '**.asciidoc'

# Limit the access of the generated GITHUB_TOKEN
permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    permissions:
      statuses: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
      - run: '.ci/scripts/lint.sh'
      - run: 'npm run ci:bundlesize'
        id: bundlesize
# TODO: This fails on forked PRs
#      - uses: actions/github-script@v6
#        env:
#          BUNDLESIZE_PASS: ${{ steps.bundlesize.outputs.bundlesize_pass }}
#          BUNDLESIZE_FAIL: ${{ steps.bundlesize.outputs.bundlesize_fail }}
#        with:
#          script: |
#            const { BUNDLESIZE_PASS, BUNDLESIZE_FAIL } = process.env;
#            let state = 'success';
#            if (BUNDLESIZE_FAIL > 0) {
#              state = 'failure';
#            }
#            github.rest.repos.createCommitStatus({
#              ...context.repo,
#              sha: context.sha,
#              state: state,
#              context: `${context.workflow} / Bundlesize: ${BUNDLESIZE_PASS} pass / ${BUNDLESIZE_FAIL} fail`,
#            });

  test-puppeteer:
    name: Test Puppeteer
    runs-on: ubuntu-latest
    strategy:
      matrix:
        stack-version:
          - '8.0.0-SNAPSHOT'
          - '8.16.2'
        scope:
          - '@elastic/apm-rum'
          - '@elastic/apm-rum-core'
          - '@elastic/apm-rum-react'
          - '@elastic/apm-rum-angular'
          - '@elastic/apm-rum-vue'
    steps:
      - uses: actions/checkout@v4
      - name: Run puppeteer tests
        uses: ./.github/workflows/run-test
        with:
          goal: 'test'
          scope: ${{ matrix.scope }}
          stack-version: ${{ matrix.stack-version }}

  npm-ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Temporary fix for "ValueError: invalid mode: 'rU' while trying to load binding.gyp"
      # See https://github.com/nodejs/node-gyp/issues/2219
      # This can be removed when "node-gyp" is updated
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Install dependencies
        run: npm ci

  all:
    if: always()
    runs-on: ubuntu-latest
    needs:
      - lint
      - npm-ci
      - test-puppeteer
    steps:
      - id: check
        uses: elastic/oblt-actions/check-dependent-jobs@v1
        with:
          jobs: ${{ toJSON(needs) }}
      - run: ${{ steps.check.outputs.is-success }}

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run coverage
        uses: ./.github/workflows/run-test
        with:
          goal: 'coverage'
          stack-version: '8.16.2'
