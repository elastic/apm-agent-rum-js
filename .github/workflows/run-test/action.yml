---

name: common tasks
description: Pull/Build docker images and run tests

inputs:
  goal:
    description: 'Goal to execute'
    required: true
  stack-version:
    description: 'Stack Version'
    required: true
  scope:
    description: 'Scope'
    default: ''
    type: string
  mode:
    description: 'Mode to use'
    default: 'none'
    type: choice
    options:
      - none
      - saucelabs
  sauce-username:
    description: 'Sauce username'
    required: false
  sauce-access-key:
    description: 'Sauce access key'
    required: false

runs:
  using: "composite"
  steps:
    - uses: actions/setup-node@v4
      with:
        node-version-file: '.nvmrc'
    - name: Pull and build docker infra
      run: './.ci/scripts/pull_and_build.sh'
      shell: bash
    - if: |
        (inputs.mode == 'saucelabs')
        && (inputs.sauce-access-key != null && inputs.sauce-access-key != '')
        && (inputs.sauce-username != null && inputs.sauce-username != '')
      shell: bash
      run: |
        echo "SAUCE_ACCESS_KEY=${{ inputs.sauce-access-key }}" >> $GITHUB_ENV
        echo "SAUCE_USERNAME=${{ inputs.sauce-username }}"     >> $GITHUB_ENV
    - name: Run tests Elastic Stack ${{ matrix.stack-version }} - ${{ matrix.scope }} - ${{ fromJSON('{"none":"Puppeteer"}')[inputs.mode] || inputs.mode }}
      run: './.ci/scripts/test.sh'
      shell: bash
      env:
        GOAL: ${{ inputs.goal }}
        MODE: ${{ inputs.mode }}
        SCOPE: ${{ inputs.scope }}
        STACK_VERSION: ${{ inputs.stack-version }}
    - name: Store test results
      if: success() || failure()
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: |
          packages/**/reports/TESTS-*.xml
    - name: Reset environment
      if: always()
      shell: bash
      run: |
        echo "SAUCE_ACCESS_KEY=" >> $GITHUB_ENV
        echo "SAUCE_USERNAME="   >> $GITHUB_ENV
