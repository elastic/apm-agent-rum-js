---
# When triggered it will prepare the release by creating a Pull Request with the
# changes to be merged, then the automation will run and release it.
name: pre-release

on:
  workflow_dispatch: ~

permissions:
  contents: read

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      # Needed to write the release changelog
      contents: write
    steps:
      - name: Configure github token
        uses: elastic/apm-pipeline-library/.github/actions/github-token@current
        with:
          url: ${{ secrets.VAULT_ADDR }}
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}

      - name: Configure git user
        uses: elastic/apm-pipeline-library/.github/actions/setup-git@current
        with:
          username: ${{ env.GIT_USER }}
          email: ${{ env.GIT_EMAIL }}
          token: ${{ env.GITHUB_TOKEN }}

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ env.GITHUB_TOKEN }}

      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: Install dependencies
        run: npm ci

      # This prevent lerna command from throwing this error:
      # "Working tree has uncommitted changes, please commit or remove the following changes before continuing"
      - name: Ignore git uncommitted changes
        run: git update-index --skip-worktree .npmrc

      - name: Create PR with the release to be reviewed
        run: npm run ci:pre-release

  status:
    if: always()
    needs:
      - release
    runs-on: ubuntu-latest
    steps:
      - id: check
        uses: elastic/apm-pipeline-library/.github/actions/check-dependent-jobs@current
        with:
          needs: ${{ toJSON(needs) }}
      - uses: elastic/apm-pipeline-library/.github/actions/notify-build-status@current
        with:
          status: ${{ steps.check.outputs.status }}
          vaultUrl: ${{ secrets.VAULT_ADDR }}
          vaultRoleId: ${{ secrets.VAULT_ROLE_ID }}
          vaultSecretId: ${{ secrets.VAULT_SECRET_ID }}
          slackChannel: "#apm-agent-js"
          message: "Build result for pre-release"
