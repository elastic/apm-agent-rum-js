[[vue-integration]]
=== Vue integration

This document covers how to use Real User Monitoring JavaScript agent with Vue applications.

[[vue-supported-versions]]
==== Supported versions

This integration supports Vue.js versions â‰¥ 3.0


NOTE: If you are using an Vuejs version < 3.0, use @elastic/apm-rum-vue 1.x to instrument your application. Details are available in a https://www.elastic.co/guide/en/apm/agent/rum-js/4.x/vue-integration.html[prior release].


[[installing-vue-integration]]
==== Installing Elastic APM Vue package

Install the `@elastic/apm-rum-vue` package as a dependency to your application:

[source,bash]
----
npm install --save @elastic/apm-rum-vue 
----

[float]
==== Using APM Plugin
[source,js]
----
app.use(ApmVuePlugin, options)
----

===== Options

* `config` (required) - RUM agent <<configuration,configuration options>>.
* `router` (optional) - Instance of Vue Router. If provided, will start capturing both page load and SPA navigation events as transactions with path of the route as its name.
* `captureErrors` (optional) - If enabled, will install a global Vue error handler to capture render errors inside the components. Defaults to `true`.
  The plugin captures the component name, lifecycle hook and file name (if it's available) as part of the error context.


[float]
==== Instrumenting your Vue application

The package exposes `ApmVuePlugin` which is a Vue Plugin and can be installed in your application using `Vue.use` method. 

[source,js]
----
import { createApp, defineComponent, h } from 'vue'
import { createRouter, createWebHashHistory } from 'vue-router'
import { ApmVuePlugin } from '@elastic/apm-rum-vue'
import App from './App.vue'

const Home = defineComponent({
  render: () => h("div", {}, "home")
})

const router = createRouter({
  history: createWebHashHistory(),
  routes: [
    { path: '/', component: Home }
  ]
})

createApp(App)
  .use(router)
  .use(ApmVuePlugin, {
    router,
    config: {
      serviceName: 'app-name',
      // agent configuration
    }
  })
  // app specific code
  .mount('#app')
----


[float]
==== Accessing agent instance inside components

Instance of the agent can be accessed inside all the components using `this.$apm`

[source,html]
----
<template>
  <div>Component timings as span</div>
</template>

<script>
export default {
  data() {
    return {
      span: null
    }
  },
  created() {
    this.span = this.$apm.startSpan('create-mount-duration', 'custom')
  },
  mounted() {
    this.span && this.span.end()
  }
}
</script>
----


`ApmVuePlugin` expects the router option to be an instance of VueRouter since it uses the 
https://next.router.vuejs.org/guide/advanced/navigation-guards.html[navigation guards] functionality.

Once the plugin is initialized, both page load and SPA navigation events will be captured
as transactions with the `path` of the route as its name and `page-load` or `route-change` as type.
